AWSTemplateFormatVersion: '2010-09-09'
Description: 'Mind Mate - Mental Wellness AI Agent Infrastructure'

Parameters:
  SenderEmail:
    Type: String
    Description: Verified SES sender email address
    Default: noreply@example.com
  
  RecipientEmail:
    Type: String
    Description: User email for daily recaps
    Default: user@example.com

Resources:
  # DynamoDB Table
  EmoCompanionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: EmoCompanion
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # S3 Bucket for uploads
  MindMateUploadsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'mindmate-uploads-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # Lambda Execution Role
  MindMateLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MindMateLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: MindMatePermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt EmoCompanionTable.Arn
                  - !Sub '${EmoCompanionTable.Arn}/index/*'
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub '${MindMateUploadsBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - rekognition:DetectFaces
                  - rekognition:DetectLabels
                Resource: '*'
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                Resource: '*'
              - Effect: Allow
                Action:
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: '*'

  # HTTP API Gateway
  MindMateHttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: MindMateAPI
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
          - '*'
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowHeaders:
          - '*'

  # API Stage
  MindMateApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref MindMateHttpApi
      StageName: $default
      AutoDeploy: true

Outputs:
  ApiEndpoint:
    Description: HTTP API Gateway endpoint URL
    Value: !GetAtt MindMateHttpApi.ApiEndpoint
  
  BucketName:
    Description: S3 bucket for uploads
    Value: !Ref MindMateUploadsBucket
  
  TableName:
    Description: DynamoDB table name
    Value: !Ref EmoCompanionTable
